#!/bin/bash

# DevEnv, install my own Dev Environment
# Copyright (C) 2025  #bercianor
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

SCRIPT_DIR="/tmp/DevEnv"

# Clone Github Repo
git clone https://github.com/bercianor/DevEnv "${SCRIPT_DIR}/"

# Check if brew is usable
if ! brew --version &>/dev/null; then
    # Esenciales (acceso root)
    sudo apt update
    sudo apt install -y build-essential curl file git xclip

    # Rust y Brew
    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh
    # shellcheck source=/dev/null
    . "${HOME}/.cargo/env"
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi
if brew --version &>/dev/null; then
    # Fuentes
    mkdir -p "$HOME/.local/share/fonts"
    wget -O "$HOME/.local/share/fonts/fonts.zip" https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/FiraCode.zip
    unzip "$HOME/.local/share/fonts/fonts.zip" -d "$HOME/.local/share/fonts/"
    fc-cache -fv

    # WezTerm
    read -p "Install WezTerm? (Y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        brew tap wez/wezterm-linuxbrew
        brew install wezterm
        mkdir -p "$HOME/.config/wezterm" && cp -f "${SCRIPT_DIR}/WezTerm/wezterm.lua" "$HOME/.config/wezterm/"
        mkdir -p "$HOME/.local/share/applications" && cp -f "${SCRIPT_DIR}/WezTerm/wezterm.desktop" "$HOME/.local/share/applications/"
    fi

    # Zsh
    read -p "Install Zsh? (Y/n) " -n 1 -r
    echo
    brew install zsh carapace zoxide atuin fzf bat lazygit
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        brew install zsh-autosuggestions zsh-syntax-highlighting zsh-autocomplete
        mkdir -p "$HOME/.cache/carapace"
        cp -f "${SCRIPT_DIR}/Zsh/.zshrc" "$HOME/"
        cp -f "${SCRIPT_DIR}/Zsh/.p10k.zsh" "$HOME/"
        cp -rf "${SCRIPT_DIR}/Zsh/.oh-my-zsh" "$HOME/"
        brew install powerlevel10k
        sudo chsh -s "$(which zsh)"
        if [ "$SHELL" != "$(which zsh)" ]; then
            echo "Error: Unable to change the default shell to Zsh. Please run 'chsh -s \$(which zsh)' manually."
            echo "Then restart your terminal to apply the changes."
        fi
    fi

    # TMux
    read -p "Install TMux? (Y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        brew install tmux
        git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
        cp -f "${SCRIPT_DIR}/TMux/.tmux.conf" "$HOME/"
        tmux new-session -d -s plugin-installation "source $HOME/.tmux.conf; tmux run-shell $HOME/.tmux/plugins/tpm/bin/install_plugins"
        tmux kill-session -t plugin-installation
    fi

    # LazyVim
    read -p "Install LazyVim? (Y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        brew install nvim node npm gcc fzf fd ripgrep coreutils bat lazygit
        cp -rf "${SCRIPT_DIR}/NVim/nvim" "$HOME/.config/"
    fi

    # Goose
    read -p "Install Goose? (Y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        brew install block-goose-cli
        echo "Run Goose to configure your credentials"
    else
        rm -f "$HOME/.config/nvim/lua/plugins/goose.lua" 2>/dev/null
    fi

    echo "Install completed."
else
    echo "Brew not found, please make sure you can use it and run again."
fi

rm -rf "${SCRIPT_DIR}"
